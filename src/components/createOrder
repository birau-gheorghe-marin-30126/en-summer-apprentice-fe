import { kebabCase } from "../utils";
import { useStyle } from "./styles";
import { addLoader, removeLoader } from "./loader"; 

export const createOrder = (categories, order) => {
    const purchase = document.createElement('div');
    purchase.id = `purchase-${order.id}`;
    purchase.classList.add(...useStyle('purchase'));

    const purchaseTitle = createParagraph(...useStyle('purchaseTitle'));
    purchaseTitle.innerText = kebabCase(order.event.eventName);
    purchase.appendChild(purchaseTitle);

    const purchaseQuantity = createInput(...useStyle('purchaseQuantity'));
    purchaseQuantity.type = 'number';
    purchaseQuantity.min = '1';
    purchaseQuantity.value = `${order.numberOfTickets}`;
    purchaseQuantity.disable = true;

    const purchaseQuantityWrapper = createDiv(...useStyle('purchaseQuantityWrapper'));
    purchaseQuantityWrapper.append(purchaseQuantity);
    purchase.appendChild(purchaseQuantityWrapper);

    const purchaseType = createSelect(...useStyle('purchaseType'));
    purchaseType.setAttribute('disabled','true');


    let ticketCategoryOptions = new Array();
    const buyedOptionString = `<option value=${order.ticketCategory.ticketCategoryID}>${order.ticketCategory.description} &nbsp ${order.ticketCategory.price} $</option>`;
    ticketCategoryOptions.push(buyedOptionString);
    order.event.listTicketCategory.map(
    (tc) =>{
      if(tc.ticketCategoryID != order.ticketCategory.ticketCategoryID){
        const str = `<option value=${tc.ticketCategoryID}>${tc.description} &nbsp $${tc.price}</option>`;
        ticketCategoryOptions.push(str);
      }
    }
    );

    const eventNameWithoutSpaces = order.event.eventName.replace(/\s/g, '');
    const ticketTypeMarkup = `
    <select id="ticketType" name="ticketType" class="select ${eventNameWithoutSpaces}-ticket-type border">
      ${ticketCategoryOptions}
    </select>
    `;
    purchaseType.innerHTML = ticketTypeMarkup;

    // const purchaseTypeDiv = document.createElement('div');
    // purchaseTypeDiv.classList.add(...useStyle('purchaseTypeWrapper'));
    // purchaseTypeDiv.append(purchaseType);
    // purchase.appendChild(purchaseTypeDiv);



    const purchaseTypeWrapper = createDiv(...useStyle('purchaseTypeWrapper'));
    purchaseTypeWrapper.append(purchaseType);
    purchase.appendChild(purchaseTypeWrapper);

    const purchaseDate = createDiv(...useStyle('purchaseDate'));
    purchaseDate.innerText = new Date(order.timestamp).toLocaleDateString();
    purchase.appendChild(purchaseDate);

    const purchasePrice = createDiv(...useStyle('purchasePrice'));
    purchasePrice.innerText = order.totalPrice;
    purchase.appendChild(purchasePrice);
    const actions = createDiv(...useStyle('actions'));

    const editButton = createButton([...useStyle(['actionButton', 'editButton'])], '<i class="fa-solid fa-pencil"></i>', doNothing);
    actions.appendChild(editButton);

    const saveButton = createButton([...useStyle(['actionButton', 'hiddenButton', 'saveButton'])], '<i class="fa-solid fa-check"></i>', doNothing);
    actions.appendChild(saveButton);

    const cancelButton = createButton([...useStyle(['actionButton', 'hiddenButton', 'cancelButton'])], '<i class="fa-solid fa-xmark"></i>', doNothing);
    actions.appendChild(cancelButton);

    const deleteButton = createButton([...useStyle(['actionButton', 'deleteButton'])], '<i class="fa-solid fa-trash-can"></i>', doNothing);
    actions.appendChild(deleteButton);

    purchase.appendChild(actions);

    function createDiv(...classes) {
        const div = document.createElement('div');
        div.classList.add(...classes);
        return div;
    }

    function createParagraph(...classes) {
        const p = document.createElement('p');
        p.classList.add(...classes);
        return p;
    }

    function createInput(...classes) {
        const input = document.createElement('input');
        input.classList.add(...classes);
        return input;
    }

    function createSelect(...classes) {
        const select = document.createElement('select');
        select.classList.add(...classes);
        return select;
    }

    function createButton(classes, innerHTML, handler) {
        const button = document.createElement('button');
        button.classList.add(...classes);
        button.innerHTML = innerHTML;
        button.addEventListener('click', handler);
        return button;
    }

    function doNothing() {
        console.log("Hi bye!");
    }
    return purchase;
};